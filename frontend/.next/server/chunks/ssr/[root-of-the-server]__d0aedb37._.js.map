{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/hp/Documents/langgraph-livekit-starter/frontend/src/components/VoiceAgentClean.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Room, RoomEvent, Track, RemoteTrack, createLocalAudioTrack } from 'livekit-client';\nimport { Mic, MicOff } from 'lucide-react';\n\ninterface RoomData {\n  room_name: string;\n  url: string;\n  token: string;\n  participant_name: string;\n}\n\nconst VoiceAgent: React.FC = () => {\n  const [room, setRoom] = useState<Room | null>(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [isMicEnabled, setIsMicEnabled] = useState(false);\n  const [audioLevels, setAudioLevels] = useState<number[]>([0, 0, 0, 0, 0]);\n  const [isListening, setIsListening] = useState(false);\n  const [agentResponse, setAgentResponse] = useState('');\n  const [connectionStatus, setConnectionStatus] = useState<'disconnected' | 'connecting' | 'connected'>('disconnected');\n  \n  const audioContextRef = useRef<AudioContext | null>(null);\n  const analyserRef = useRef<AnalyserNode | null>(null);\n  const animationFrameRef = useRef<number | null>(null);\n  const roomNameRef = useRef(`voice-chat-${Math.random().toString(36).substring(7)}`);\n  const participantNameRef = useRef(`user-${Math.random().toString(36).substring(7)}`);\n  const autoConnectAttempted = useRef(false);\n  const apiBaseUrl = 'http://localhost:8000';\n\n  // Auto-connect on component mount (room setup only)\n  useEffect(() => {\n    if (!autoConnectAttempted.current) {\n      autoConnectAttempted.current = true;\n      handleAutoConnect();\n    }\n  }, []);\n\n  const handleVoiceButtonPress = async () => {\n    if (!isConnected) {\n      // If not connected, try to connect first\n      await handleAutoConnect();\n      return;\n    }\n    \n    // Toggle microphone\n    await toggleMicrophone();\n  };\n\n  const handleAutoConnect = async () => {\n    try {\n      setConnectionStatus('connecting');\n      await createAndJoinRoom();\n    } catch (error) {\n      console.error('Auto-connect failed:', error);\n      setConnectionStatus('disconnected');\n    }\n  };\n\n  const createAndJoinRoom = async () => {\n    try {\n      // Create room\n      const createResponse = await fetch(`${apiBaseUrl}/create-room`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ room_name: roomNameRef.current })\n      });\n      \n      if (!createResponse.ok) {\n        throw new Error('Failed to create room');\n      }\n\n      // Get token\n      const tokenResponse = await fetch(`${apiBaseUrl}/token`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          room_name: roomNameRef.current,\n          participant_name: participantNameRef.current\n        })\n      });\n      \n      if (!tokenResponse.ok) {\n        throw new Error('Failed to get token');\n      }\n\n      const roomData: RoomData = await tokenResponse.json();\n      await connectToRoom(roomData);\n      \n      // Start agent\n      await startAgent();\n      \n    } catch (error) {\n      console.error('Failed to create and join room:', error);\n      throw error;\n    }\n  };\n\n  const connectToRoom = async (roomData: RoomData) => {\n    try {\n      const newRoom = new Room();\n      \n      // Set up room event listeners\n      newRoom.on(RoomEvent.Connected, () => {\n        console.log('Connected to room');\n        setIsConnected(true);\n        setConnectionStatus('connected');\n      });\n      \n      newRoom.on(RoomEvent.Disconnected, () => {\n        console.log('Disconnected from room');\n        setIsConnected(false);\n        setConnectionStatus('disconnected');\n      });\n      \n      newRoom.on(RoomEvent.TrackSubscribed, (track: RemoteTrack) => {\n        if (track.kind === Track.Kind.Audio) {\n          console.log('Agent audio track received');\n          const audioElement = track.attach();\n          document.body.appendChild(audioElement);\n          \n          // Extract agent response from audio metadata if available\n          setAgentResponse('Alex is responding...');\n          setTimeout(() => setAgentResponse(''), 3000);\n        }\n      });\n      \n      // Connect to the room\n      await newRoom.connect(roomData.url, roomData.token);\n      setRoom(newRoom);\n      \n    } catch (error) {\n      console.error('Failed to connect to room:', error);\n      throw error;\n    }\n  };\n\n  const startAgent = async () => {\n    try {\n      const response = await fetch(`${apiBaseUrl}/start-agent`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ room_name: roomNameRef.current })\n      });\n      \n      if (!response.ok) {\n        throw new Error('Failed to start agent');\n      }\n      \n      console.log('Agent started successfully');\n    } catch (error) {\n      console.error('Failed to start agent:', error);\n    }\n  };\n\n  const toggleMicrophone = async () => {\n    if (!room) return;\n    \n    try {\n      if (!isMicEnabled) {\n        // Enable microphone\n        const audioTrack = await createLocalAudioTrack();\n        await room.localParticipant.publishTrack(audioTrack);\n        setIsMicEnabled(true);\n        \n        // Start audio level monitoring\n        startAudioLevelMonitoring(audioTrack.mediaStreamTrack);\n      } else {\n        // Disable microphone\n        room.localParticipant.audioTrackPublications.forEach((pub) => {\n          if (pub.track) {\n            room.localParticipant.unpublishTrack(pub.track);\n          }\n        });\n        setIsMicEnabled(false);\n        stopAudioLevelMonitoring();\n      }\n    } catch (error) {\n      console.error('Failed to toggle microphone:', error);\n    }\n  };\n\n  const startAudioLevelMonitoring = (mediaStreamTrack: MediaStreamTrack) => {\n    try {\n      const stream = new MediaStream([mediaStreamTrack]);\n      audioContextRef.current = new AudioContext();\n      const source = audioContextRef.current.createMediaStreamSource(stream);\n      analyserRef.current = audioContextRef.current.createAnalyser();\n      analyserRef.current.fftSize = 256;\n      source.connect(analyserRef.current);\n      \n      const updateAudioLevels = () => {\n        if (!analyserRef.current) return;\n        \n        const dataArray = new Uint8Array(analyserRef.current.frequencyBinCount);\n        analyserRef.current.getByteFrequencyData(dataArray);\n        \n        // Calculate average volume\n        const average = dataArray.reduce((sum, value) => sum + value, 0) / dataArray.length;\n        const normalizedLevel = Math.min(average / 128, 1);\n        \n        // Update 5 audio level indicators with some randomness for visual effect\n        const newLevels = Array.from({ length: 5 }, (_, i) => {\n          const variation = (Math.random() - 0.5) * 0.3;\n          return Math.max(0, Math.min(1, normalizedLevel + variation));\n        });\n        \n        setAudioLevels(newLevels);\n        setIsListening(normalizedLevel > 0.1);\n        \n        animationFrameRef.current = requestAnimationFrame(updateAudioLevels);\n      };\n      \n      updateAudioLevels();\n    } catch (error) {\n      console.error('Failed to start audio monitoring:', error);\n    }\n  };\n\n  const stopAudioLevelMonitoring = () => {\n    if (animationFrameRef.current) {\n      cancelAnimationFrame(animationFrameRef.current);\n      animationFrameRef.current = null;\n    }\n    \n    if (audioContextRef.current) {\n      audioContextRef.current.close();\n      audioContextRef.current = null;\n    }\n    \n    analyserRef.current = null;\n    setAudioLevels([0, 0, 0, 0, 0]);\n    setIsListening(false);\n  };\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      stopAudioLevelMonitoring();\n      if (room) {\n        room.disconnect();\n      }\n    };\n  }, [room]);\n\n  return (\n    <div \n      className=\"min-h-screen flex flex-col items-center justify-center p-8\"\n      style={{\n        background: 'linear-gradient(135deg, #1a1a1a 0%, #2d2d2d 100%)',\n        backgroundImage: `url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\"><defs><pattern id=\"grain\" width=\"100\" height=\"100\" patternUnits=\"userSpaceOnUse\"><circle cx=\"50\" cy=\"50\" r=\"0.5\" fill=\"%23ffffff\" opacity=\"0.03\"/></pattern></defs><rect width=\"100\" height=\"100\" fill=\"url(%23grain)\"/></svg>')`,\n      }}\n    >\n      {/* Audio Level Visualization */}\n      <div className=\"flex space-x-4 mb-12\">\n        {audioLevels.map((level, index) => (\n          <div\n            key={index}\n            className={`w-16 h-32 rounded-full transition-all duration-150 ease-out ${\n              isListening && isMicEnabled \n                ? 'bg-gray-800 shadow-xs' \n                : 'bg-white'\n            }`}\n            style={{\n              opacity: isListening && isMicEnabled ? 0.6 + (level * 0.4) : 0.2,\n              transform: `scaleY(${0.3 + (level * 0.7)})`,\n              boxShadow: isListening && isMicEnabled \n                ? `0 0 20px rgba(75, 85, 99, ${0.3 + (level * 0.5)})` \n                : 'none'\n            }}\n          />\n        ))}\n      </div>\n\n      {/* Agent Response Display */}\n      {agentResponse && (\n        <div className=\"max-w-2xl mx-auto mb-8 p-6 bg-black/20 backdrop-blur-sm rounded-lg border border-white/10\">\n          <p className=\"text-white text-center text-lg leading-relaxed\">\n            {agentResponse}\n          </p>\n        </div>\n      )}\n\n      {/* Connection Status */}\n      <div className=\"mb-8\">\n        <div className={`px-4 py-2 rounded-full text-sm font-medium ${\n          connectionStatus === 'connected' ? 'bg-green-500/20 text-green-400' :\n          connectionStatus === 'connecting' ? 'bg-yellow-500/20 text-yellow-400' :\n          'bg-red-500/20 text-red-400'\n        }`}>\n          {connectionStatus === 'connected' ? 'Connected to Alex' :\n           connectionStatus === 'connecting' ? 'Connecting...' :\n           'Disconnected'}\n        </div>\n      </div>\n\n      {/* Microphone Button */}\n      <button\n        onClick={handleVoiceButtonPress}\n        className={`w-20 h-20 rounded-full flex items-center justify-center transition-all duration-200 ${\n          isMicEnabled \n            ? 'bg-red-500 hover:bg-red-600 shadow-lg shadow-red-500/25' \n            : 'bg-white hover:bg-gray-100 shadow-lg shadow-white/25'\n        } ${connectionStatus === 'connecting' ? 'opacity-50 cursor-not-allowed' : 'hover:scale-105'}`}\n      >\n        {isMicEnabled ? (\n          <MicOff className=\"w-8 h-8 text-white\" />\n        ) : (\n          <Mic className=\"w-8 h-8 text-gray-800\" />\n        )}\n      </button>\n\n      {/* Instructions */}\n      <div className=\"mt-8 text-center\">\n        <p className=\"text-gray-600/60 text-sm\">\n          {!isConnected ? 'Connecting to voice agent...' :\n           !isMicEnabled ? 'Click the microphone to start talking' :\n           isListening ? 'Listening...' :\n           'Speak to Alex'}\n        </p>\n      </div>\n\n      {/* Footer */}\n      <div className=\"absolute bottom-4 left-4 text-white/40 text-xs flex items-center space-x-2\">\n        <div className=\"w-2 h-2 bg-green-400 rounded-full\"></div>\n        <span>Hosted on LiveKit Cloud</span>\n      </div>\n    </div>\n  );\n};\n\nexport default VoiceAgent;\n"],"names":[],"mappings":"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","debugId":null}}]
}